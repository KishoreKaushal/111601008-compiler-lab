%%
%term	EOF
	| SEMICOLON
	| INT
	| STRING
	| BOOL
	| NUMCONST of int
	| STRINGCONST of string
	| ID of string
	| TRUE of bool
	| FALSE of bool
	| PLUS | MINUS | TIMES | DIVIDE | MOD
	| EQ | NEQ | LE | LT | GE | GT
	| UMINUS | NOT 
	| ASSIGN | COMMA | COLON 
	| DOT | LBRACK | RBRACK | LBRACE | RBRACE | LPAREN | RPAREN
	| IF | ELSE | STATIC | WHILE | RETURN | BREAK
	| OR | AND | XOR | VAR

%nonterm	program  		of Ast.program
		|	declarationList of Ast.declaration list
		|	declaration		of Ast.declaration
		|	typeSpecifier	of Ast.typeSpecifier
		|	varDeclList		of Ast.varDeclId list
		|	varDeclId		of Ast.varDeclId
		|	varDeclaration	of Ast.declaration

%keyword INT STRING BOOL TRUE FALSE


%pos int
%verbose


%eop EOF
%noshift EOF

%left SEMICOLON
%right UMINUS NOT
%left TIMES DIVIDE MOD
%left PLUS MINUS
%left EQ NEQ
%left AND 
%left XOR 
%left OR 
%left ASSIGN
%left COMMA

%name MinC

%%

program				:	declarationList						(declarationList)

declarationList		:	declaration declarationList			(declaration::declarationList)
					|										([])

declaration			:	varDeclaration						(varDeclaration)

varDeclaration		:	typeSpecifier varDeclList SEMICOLON (Ast.VARDEC(typeSpecifier , varDeclList))

varDeclList			:	varDeclId							([varDeclId])
					|	varDeclId COMMA varDeclList			(varDeclId::varDeclList)

varDeclId			:	ID									(Ast.VARDEC_IDEN(ID))
					|	ID	LBRACK NUMCONST RBRACK			(Ast.VARDEC_ARR_IDEN(ID , NUMCONST))

typeSpecifier		:	INT									(Ast.INT)
					|	BOOL								(Ast.BOOL)
					|	STRING								(Ast.STRING)