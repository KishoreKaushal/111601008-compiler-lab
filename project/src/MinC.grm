%%
%term	EOF
	| SEMICOLON
	| INT of int
	| BOOL of bool
	| ID of string
	| PLUS | MINUS | TIMES | DIVIDE | MOD
	| EQ | NEQ | LE | LT | GE | GT
	| UMINUS | NOT 
	| ASSIGN | COMMA | COLON 
	| DOT | LBRACK | RBRACK | LBRACE | RBRACE | LPAREN | RPAREN
	| IF | ELSE | STATIC | WHILE | RETURN | BREAK
	| OR | AND | XOR | TRUE | FALSE | VAR

%nonterm	program  		of Ast.program
		|	declarationList of Ast.declaration list
		|	declaration		of Ast.declaration
		|	varDeclaration	of Ast.VARDEC
		|	funDeclaration 	of Ast.FUNDEC
		|	typeSpecifier	of Ast.typeSpecifier
		|	varDeclList		of Ast.varDeclId list

%keyword IF ELSE STATIC WHILE RETURN BREAK OR 
			AND XOR TRUE FALSE VAR


%pos int
%verbose


%eop EOF
%noshift EOF

%left SEMICOLON
%right UMINUS NOT
%left TIMES DIVIDE MOD
%left PLUS MINUS
%left EQ NEQ
%left AND 
%left XOR 
%left OR 
%left ASSIGN
%left COMMA

%name MinC

%%

program				:	declarationList						(declarationList)

declarationList		:	declaration declarationList			(declaration::declarationList)
					|										([])

declaration			:	varDeclaration						(varDeclaration)
					|	funDeclaration						(funDeclaration)

varDeclaration		:	typeSpecifier varDeclList SEMICOLON (Ast.VARDEC(typeSpecifier , varDeclList))

varDeclList			:	varDeclId							([varDeclId])
					|	varDeclId COMMA varDeclList			(varDeclId::varDeclList)

