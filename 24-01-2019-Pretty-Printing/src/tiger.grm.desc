
state 0:

	init : . program 

	INT	shift 7
	STRING	shift 6
	ID	shift 5
	LET	shift 4

	init	goto 43
	program	goto 3
	exp	goto 2
	lvalue	goto 1

	.	reduce by rule 1


state 1:

	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	ASSIGN	shift 10
	DOT	shift 9
	LBRACK	shift 8


	.	error


state 2:

	program : exp . SEMICOLON program 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 

	SEMICOLON	shift 15
	PLUS	shift 14
	MINUS	shift 13
	TIMES	shift 12
	DIVIDE	shift 11


	.	error


state 3:

	init : program .  (reduce by rule 0)



	.	reduce by rule 0


state 4:

	exp : LET . decs IN exps END 

	TYPE	shift 19
	VAR	shift 18

	decs	goto 17
	dec	goto 16

	.	reduce by rule 11


state 5:

	lvalue : ID .  (reduce by rule 19)



	.	reduce by rule 19


state 6:

	exp : STRING .  (reduce by rule 8)



	.	reduce by rule 8


state 7:

	exp : INT .  (reduce by rule 3)



	.	reduce by rule 3


state 8:

	lvalue : lvalue LBRACK . exp RBRACK 

	INT	shift 7
	STRING	shift 6
	ID	shift 5
	LET	shift 4

	exp	goto 20
	lvalue	goto 1

	.	error


state 9:

	lvalue : lvalue DOT . ID 

	ID	shift 21


	.	error


state 10:

	exp : lvalue ASSIGN . exp 

	INT	shift 7
	STRING	shift 6
	ID	shift 5
	LET	shift 4

	exp	goto 22
	lvalue	goto 1

	.	error


state 11:

	exp : exp DIVIDE . exp 

	INT	shift 7
	STRING	shift 6
	ID	shift 5
	LET	shift 4

	exp	goto 23
	lvalue	goto 1

	.	error


state 12:

	exp : exp TIMES . exp 

	INT	shift 7
	STRING	shift 6
	ID	shift 5
	LET	shift 4

	exp	goto 24
	lvalue	goto 1

	.	error


state 13:

	exp : exp MINUS . exp 

	INT	shift 7
	STRING	shift 6
	ID	shift 5
	LET	shift 4

	exp	goto 25
	lvalue	goto 1

	.	error


state 14:

	exp : exp PLUS . exp 

	INT	shift 7
	STRING	shift 6
	ID	shift 5
	LET	shift 4

	exp	goto 26
	lvalue	goto 1

	.	error


state 15:

	program : exp SEMICOLON . program 

	INT	shift 7
	STRING	shift 6
	ID	shift 5
	LET	shift 4

	program	goto 27
	exp	goto 2
	lvalue	goto 1

	.	reduce by rule 1


state 16:

	decs : dec . decs 

	TYPE	shift 19
	VAR	shift 18

	decs	goto 28
	dec	goto 16

	.	reduce by rule 11


state 17:

	exp : LET decs . IN exps END 

	IN	shift 29


	.	error


state 18:

	dec : VAR . ID ASSIGN exp 

	ID	shift 30


	.	error


state 19:

	dec : TYPE . ID EQ ty 

	ID	shift 31


	.	error


state 20:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	PLUS	shift 14
	MINUS	shift 13
	TIMES	shift 12
	DIVIDE	shift 11
	RBRACK	shift 32


	.	error


state 21:

	lvalue : lvalue DOT ID .  (reduce by rule 20)



	.	reduce by rule 20


state 22:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : lvalue ASSIGN exp .  (reduce by rule 9)



	.	reduce by rule 9


state 23:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 7)

	PLUS	shift 14
	MINUS	shift 13


	.	reduce by rule 7


state 24:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 6)
	exp : exp . DIVIDE exp 

	PLUS	shift 14
	MINUS	shift 13


	.	reduce by rule 6


state 25:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 5)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 



	.	reduce by rule 5


state 26:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 4)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 



	.	reduce by rule 4


state 27:

	program : exp SEMICOLON program .  (reduce by rule 2)



	.	reduce by rule 2


state 28:

	decs : dec decs .  (reduce by rule 12)



	.	reduce by rule 12


state 29:

	exp : LET decs IN . exps END 

	INT	shift 7
	STRING	shift 6
	ID	shift 5
	LET	shift 4

	exp	goto 34
	lvalue	goto 1
	exps	goto 33

	.	reduce by rule 16


state 30:

	dec : VAR ID . ASSIGN exp 

	ASSIGN	shift 35


	.	error


state 31:

	dec : TYPE ID . EQ ty 

	EQ	shift 36


	.	error


state 32:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 21)



	.	reduce by rule 21


state 33:

	exp : LET decs IN exps . END 

	END	shift 37


	.	error


state 34:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exps : exp .  (reduce by rule 17)
	exps : exp . SEMICOLON exps 

	SEMICOLON	shift 38
	PLUS	shift 14
	MINUS	shift 13
	TIMES	shift 12
	DIVIDE	shift 11


	.	reduce by rule 17


state 35:

	dec : VAR ID ASSIGN . exp 

	INT	shift 7
	STRING	shift 6
	ID	shift 5
	LET	shift 4

	exp	goto 39
	lvalue	goto 1

	.	error


state 36:

	dec : TYPE ID EQ . ty 

	ID	shift 41

	ty	goto 40

	.	error


state 37:

	exp : LET decs IN exps END .  (reduce by rule 10)



	.	reduce by rule 10


state 38:

	exps : exp SEMICOLON . exps 

	INT	shift 7
	STRING	shift 6
	ID	shift 5
	LET	shift 4

	exp	goto 34
	lvalue	goto 1
	exps	goto 42

	.	reduce by rule 16


state 39:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	dec : VAR ID ASSIGN exp .  (reduce by rule 14)

	PLUS	shift 14
	MINUS	shift 13
	TIMES	shift 12
	DIVIDE	shift 11


	.	reduce by rule 14


state 40:

	dec : TYPE ID EQ ty .  (reduce by rule 13)



	.	reduce by rule 13


state 41:

	ty : ID .  (reduce by rule 15)



	.	reduce by rule 15


state 42:

	exps : exp SEMICOLON exps .  (reduce by rule 18)



	.	reduce by rule 18


state 43:


	EOF	accept


	.	error

49 of 127 action table entries left after compaction
32 goto table entries
